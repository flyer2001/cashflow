extension Onboarding {
    static let start: [OnboardingContentItem] = [
        .init(
            key: "start",
            content: .text(text: "Приветствуем вас, дорогой участник! Перед тем, как мы начнем игру, предлагаем ознакомиться с её правилами, чтобы в процессе игры оставалось только одно - наслаждаться процессом.Вы уже знакомы с игрой “Денежный поток”, которая была создана по одноименной книге Роберта Кийосаки 'Богатый папа, бедный папа'?"),
            next: .init(buttons: [
                .init(
                    key: "rulesIntro",
                    buttonName: "Да"
                ),
                .init(
                    key: "aboutGame",
                    buttonName: "Нет"
                )
            ])
        ),
        .init(
            key: "aboutGame",
            content: .image(
                uri: "https://habrastorage.org/webt/rs/uk/od/rsukodqa6qow7aqtqormi0cyagq.png",
                captionText: "Игра “Денежный поток” была создана с целью помочь участникам разобраться как работают финансы и наработать навык создания капитала. Кийосаки также выделяет формулу, следуя которой, можно неизбежно прийти к богатству. Но несмотря на всю простоту формулы, многие в жизни действуют совершенно иначе, постоянно соревнуясь в “крысиных бегах”. Чаще всего это происходит ввиду того, что этот человек не разбирается что такое активы и пассивы. Ты знаком с этим понятиями?"
            ),
            next: .init(buttons: [
                .init(
                    key: "rulesIntro",
                    buttonName: "Да"
                ),
                .init(
                    key: "activePassive",
                    buttonName: "Нет"
                )
            ])
        ),
        .init(
            key: "activePassive",
            content: .text(text: "Активы - это все то, что приносит нам доход. Например, акции, недвижимость, которую мы сдаем в аренду.\nЕсли же предмет нашего владения приносит нам только расходы, то он становится пассивом. Поэтому так часто люди не знающие этого покупают квартиру или машину в кредит и еще продолжают платить за их обслуживания, не получая при этом никакого дохода и считая их своими активами. \nНикто не запрещает покупать предметы роскоши просто для пользования, главное  учитывать баланс поступлений и расходов, следуя  при этом формуле богатства. Этому и учит игра!\nДавайте проверим, как вы усвоили разницу понятий активы и пассивы."),
            next: .init(buttons: [
                .init(
                    key: "checkKnowledge",
                    buttonName: "Проверить знания"
                ),
                .init(
                    key: "rulesIntro",
                    buttonName: "Вернуться к правилам"
                )
            ])
        ),
        .init(
            key: "checkKnowledge",
            content: .text(text: "Айфон, купленный для ежедневной работы по созданию контента для соц. сетей и повышения заработной платы - это актив или пассив?"),
            next: .init(buttons: [
                .init(
                    key: "iPhoneActive",
                    buttonName: "Актив"
                ),
                .init(
                    key: "iPhonePassive",
                    buttonName: "Пассив"
                )
            ])
        ),
        .init(
            key: "iPhoneActive",
            content: .text(text: "Поскольку айфон покупался с целью повышения качества и стоимости работы, можем сделать вывод, что в данном случае - это актив. \nЕсли бы айфон брался в кредит на последние деньги, чтобы покрасоваться перед друзьями - то занесли бы его в пассивы. Поскольку он не только не приносит нам дохода, но еще и увеличивает наши расходы с % по кредиту."),
            next: .init(buttons: [
                .init(
                    key: "flatQuestion",
                    buttonName: "Далее"
                )
            ])
        ),
        .init(
            key: "iPhonePassive",
            content: .text(text: "Поскольку айфон покупался с целью повышения качества и стоимости работы, можем сделать вывод, что в данном случае - это актив. \nЕсли бы айфон брался в кредит на последние деньги, чтобы покрасоваться перед друзьями - то занесли бы его в пассивы. Поскольку он не только не приносит нам дохода, но еще и увеличивает наши расходы с % по кредиту."),
            next: .init(buttons: [
                .init(
                    key: "flatQuestion",
                    buttonName: "Далее"
                )
            ])
        ),
        .init(
            key: "flatQuestion",
            content: .text(text: "Квартира, взятая в ипотеку с первым взносом на всю имеющуюся сумму сбережений - это актив или пассив?"),
            next: .init(buttons: [
                .init(
                    key: "flatAnswerActive",
                    buttonName: "Актив"
                ),
                .init(
                    key: "flatAnswerPassive",
                    buttonName: "Пассив"
                )
            ])
        ),
        .init(
            key: "flatAnswerActive",
            content: .text(text: "В данном случае мы берем квартиру для жилья, дохода нам она приносить не будет. Более того, через некоторое время необходимо будет делать ремонт, а еще ежемесячно платить за свет и воду. Соответственно, новая квартира, в которой мы собираемся жить, лишь приносит дополнительные расходы, а до выплаты полной стоимости ипотеки все еще не принадлежит нам. Однозначно - это пассив. \nЕсли бы мы брали квартиру для того, чтобы сдавать её в аренду и сумма от сдачи в аренду ещё бы перекрывала расходы по ипотеке, тогда можно считать квартиру активом."),
            next: .init(buttons: [
                .init(
                    key: "studyQuestion",
                    buttonName: "Далее"
                )
            ])
        ),
        .init(
            key: "flatAnswerPassive",
            content: .text(text: "В данном случае мы берем квартиру для жилья, дохода нам она приносить не будет. Более того, через некоторое время необходимо будет делать ремонт, а еще ежемесячно платить за свет и воду. Соответственно, новая квартира, в которой мы собираемся жить, лишь приносит дополнительные расходы, а до выплаты полной стоимости ипотеки все еще не принадлежит нам. Однозначно - это пассив. \nЕсли бы мы брали квартиру для того, чтобы сдавать её в аренду и сумма от сдачи в аренду ещё бы перекрывала расходы по ипотеке, тогда можно считать квартиру активом."),
            next: .init(buttons: [
                .init(
                    key: "studyQuestion",
                    buttonName: "Далее"
                )
            ])
        ),
        .init(
            key: "studyQuestion",
            content: .text(text: "Обучение в кредит в топовой школе бизнеса, с целью повышения стоимости своего труда - это актив или пассив?"),
            next: .init(buttons: [
                .init(
                    key: "studyAnswerActive",
                    buttonName: "Актив"
                ),
                .init(
                    key: "studyAnswerPassive",
                    buttonName: "Пассив"
                )
            ])
        ),
        .init(
            key: "studyAnswerActive",
            content: .text(text: "За счет обучения в топовой бизнес школе можно не только повысить стоимость своего труда, но и начать самому преподавать такие знания, став наставником. Поэтому такие вложения можно отнести к активам, которые продолжат приносить вам доход еще много лет.\n\nОтлично! Вижу, что ты разобрался со всем! Вернемся к правилам игры."),
            next: .init(buttons: [
                .init(
                    key: "rulesIntro",
                    buttonName: "К правилам"
                )
            ])
        ),
        .init(
            key: "studyAnswerPassive",
            content: .text(text: "За счет обучения в топовой бизнес школе можно не только повысить стоимость своего труда, но и начать самому преподавать такие знания, став наставником. Поэтому такие вложения можно отнести к активам, которые продолжат приносить вам доход еще много лет.\n\nОтлично! Вижу, что ты разобрался со всем! Вернемся к правилам игры."),
            next: .init(buttons: [
                .init(
                    key: "rulesIntro",
                    buttonName: "К правилам"
                )
            ])
        ),
        .init(
            key: "rulesIntro",
            content: .text(text: "Мы позволили себе немного усовершенствовать игру. В реальной жизни мы ведь не изолированы от других людей. А навык эффективной коммуникации помогает не только больше зарабатывать, но и получать выгодные сделки. Поэтому мы играем в парах за одну роль на карте."),
            next:.init(buttons: [
                .init(
                    key: "pcm",
                    buttonName: "Узнать подробности"
                ),
                .init(
                    key: "testGame",
                    buttonName: "Тестовая игра"
                ),
            ])
        ),
        .init(
            key: "pcm",
            content: .image(
                uri: "https://habrastorage.org/webt/o9/wk/ac/o9wkac59iq6w6xkbc6dvsdlyzgu.png",
                captionText: "Для прокачки навыка эффективной коммуникации мы используем модель Process Communication Model. Не важно с кем вы окажетесь в паре, главное - научиться совместно принимать решения и преодолевать конфликты. Зная “базу” и “фазу” своего партнера - вам будет намного проще вести коммуникацию."
            ),
            next:.init(buttons: [
                .init(
                    key: "rollMaster",
                    buttonName: "Далее"
                )
            ])
        ),
        .init(
            key: "rollMaster",
            content: .text(text: "Для того, чтобы игра прошла наиболее эффективно предварительно со своим партнером договоритесь кто будет кидать кубик, а кто следить за подсчетами в таблице. Это позволит вам быстрее двигаться по игре. Главное, чтобы каждый из вас искренне любил и честно выполнял свои договоренности. Решения принимаются совместно. "),
            next: .init(button:
                    .init(
                        key: "partnerRoles",
                        buttonName: "Далее"
                    )
            )
        ),
        .init(
            key: "partnerRoles",
            content: .text(text: "До того, как мы начнем играть, пообщайтесь с вашим партнером и договоритесь об одной общей мечте на игру. Если вам удастся выйти из “Крысиных бегов” - можно считать мечту исполненной. Лучше всего дать мечте денежную оценку. \n \n Например: “Летом 2024 года поехать отдыхать с друзьями в Крым на 2 недели. Стоимость 100 тыс. рублей.” Ставьте мечты, которые мотивируют и зажигают вас, пусть они будет не супер большие, но максимально реальные, чтобы ваш мозг в ходе игры действительно был замотивирован выиграть."),
            next: .init(button:
                    .init(
                        key: "partnerDreams",
                        buttonName: "Я не знаю партнера. Как быть?"
                    )
            )
        ),
        .init(
            key: "partnerDreams",
            content: .text(text: "Не страшно, если вы еще не знакомы со своим партнером. Чтобы поставить совместную мечту на игру, поделитесь тем, о чем каждый из вас мечтает и выберете то, что драйвит обоих из вас."),
            next: .init(button:
                    .init(
                        key: "partnerPath",
                        buttonName: "Что еще предстоит пройти с партнером?"
                    )
            )
        ),
        .init(
            key: "partnerPath",
            content: .text(text: "Если вы останавливаетесь, а не проходите мимо клетки “Расчетный чек”, то вам выпадает карточка “Конфликт”.  Это значит, что у вас в жизни с партнером произошла определенная ситуация, при разрешении которой вы получите удвоенный доход, а противном случае - потеряете весь доход."),
            next: .init(button:
                    .init(
                        key: "confictSector",
                        buttonName: "Что такое конфликт?"
                    )
            )
        ),
        .init(
            key: "confictSector",
            content: .text(text: "Конфликт - это ситуация, при которой 2 человека говорят об об одном и том же, но видят совершенно разные вещи. Как пример, изображение с цилиндром. Если один человек “светит” справа - то видит квадрат на стене. Если второй человек “светит” слева - то видит круг. С такими ситуациями мы часто сталкиваемся в жизни и ищем тот самый “Компромисс”. Но компромисс - это не решение, а заблуждение, ведь если мы у круга обрежем часть или у квадрата, разве мы придем к истине того, что мы оба говорим о цилиндре? \n\n Думаю, что нет."),
            next: .init(button:
                    .init(
                        key: "confictResolve",
                        buttonName: "Как разрешать конфликты?"
                    )
            )
        ),
        .init(
            key: "confictResolve",
            content: .text(text: "Навыку разрешения конфликтов посвящена книга Стивена Кови “Третья альтернатива”, которую мы и взяли в основу новой механики нашей игры. Чтобы найти решение конфликта - надо выйти в объем вместо того, чтобы урезать что-то у существующих фигур. А для этого необходимо искать новые решения, которые включают интересы обоих сторон, а не уменьшают их. \n\nЧтобы наработать данных навык, в игре вам необходимо будет предложить 3 решения ситуации. А какое из них верное - ответит кубик. Если выпадет 4,5 или 6 - ваше решение устраивает обе стороны. Если 1,2 или 3 - кто-то все еще остается недовольным.\n\nКак известно, где фокус - там и результат. Поэтому разрешение конфликтов дает много высвободившейся энергии, которая в свою очередь найдет как превратиться в деньги. Все, как в жизни! Не теряйте возможность отработать новый навык, вам он очень пригодится, даже если конфликты у вас внутренние, а не с партнерами."),
            next: .init(button:
                    .init(
                        key: "whatElse",
                        buttonName: "Чем еще удивим вас?"
                    )
            )
        ),
        .init(
            key: "whatElse",
            content: .text(text: "В отличие от традиционного “Денежного потока” у нас можно общаться и договариваться с другими участниками: можно совместно инвестировать и продавать друг другу возможности, можно объединять усилия для покупки активов.\n\nКроме того, объединив усилия, вы точно сможете двигаться быстрее к своим мечтам. Наша практика показывает ускорение в несколько раз. Не верите? Проверьте стратегию в следующей игре! "),
            next: .init(button:
                    .init(
                        key: "whatElse2",
                        buttonName: "Чем еще удивим вас?"
                    )
            )
        ),
        .init(
            key: "whatElse2",
            content: .text(text: "Чтобы еще лучше усвоить навыки работы с активами и пассивами, каждая пара участников становится аудитором для пары, которая ходит следом за ними.\n\nТо есть необходимо перепроверить за своими товарищами правильность заполнения таблицы. Это может делать один из партнеров или совместно, как договоритесь. "),
            next: .init(button:
                    .init(
                        key: "prepare",
                        buttonName: "Что подготовить к игре?"
                    )
            )
        ),
        .init(
            key: "prepare",
            content: .text(text: "1.Установите Zoom и телеграм на свой компьютер. Так вам будет удобнее играть. \n\n 2.Попробуйте до игры открыть рядом два окна на одном мониторе. Как это сделать, смотрите в видео ниже."),
            next: .init(button:
                    .init(
                        key: "prepareTwoMonitor",
                        buttonName: "Посмотреть короткое видео"
                    )
            )
        ),
        .init(
            key: "prepareTwoMonitor",
            content: .video(
                uri: "https://github.com/flyer2001/cashflow/raw/main/OnboardingVideo/prepare_two_windows.mp4",
                captionText: ""
            ),
            next: .init(button:
                    .init(
                        key: "finalOnboardingGoals",
                        buttonName: "Далее"
                    )
            )
        ),
        .init(
            key: "finalOnboardingGoals",
            content: .text(text: "Ну и на последок еще раз напомним цель игры: всем участникам вместе за 1,5 часа выйти из крысиных бегов и достичь своей мечты. Конечно, у вас могут быть еще и свои цели: попробовать новую тактику инвестирования, наработать новые навыки коммуникации или просто хорошо провести время. Но не забывайте, что это всего лишь игра и у нее тоже есть свои правила!\n\nГотовьте чай и интернет и увидимся на игре! "),
            next: .init(button:
                    .init(
                        key: "testGame",
                        buttonName: "Попробовать тестовую игру"
                    )
            )
        ),
        .init(
            key: "testGame",
            content: .image(
                uri: "https://habrastorage.org/webt/ci/yi/wf/ciyiwf7trpr8lg2-5rf64suo_og.png",
                captionText: "Отлично! Давай пройдем пробный круг по игровому полю вместе. \n\nНа старте каждому игроку выдается карточка-профессия, так сказать вымышленная роль, согласно которой вы проходите свой путь в игре. Но показатели все те, что и в жизни: зарплата, расходы, налоги, сбережения, активы и пассивы. \n\nКарточка выглядит так:"
            ),
            next:.init(buttons: [
                .init(
                    key: "googleTable",
                    buttonName: "Далее"
                )
            ])
        ),
        .init(
            key: "googleTable",
            content: .image(
                uri: "https://habrastorage.org/webt/gj/1x/xg/gj1xxgs-yxylvwy0lzbxq55rjtq.png",
                captionText: "До старта игры, всем участникам  необходимо перенести данные из полученный карточки в гугл-таблицу, где будет осуществляться все подсчеты по денежным потокам в ходе игры.\n\nТаблица выглядит так:"
            ),
            next:.init(buttons: [
                .init(
                    key: "googleTableVideo",
                    buttonName: "Как заполнять таблицу из карточки?"
                )
            ])
        ),
        .init(
            key: "googleTableVideo",
            content: .video(
                uri: "https://github.com/flyer2001/cashflow/raw/main/OnboardingVideo/fill_table_from_card.mp4",
                captionText: "Посмотрите видео, как заполнить таблицу из карты. \n\n Обратите внимание: сбережения есть только на старте, они не являются частью выплат. Все кроме налогов, других активов и детских расходов можно погасить  входе игры, выплатив долги."
            ),
            next: .init(button:
                    .init(
                        key: "startPercs",
                        buttonName: "Далее"
                    )
            )
        ),
        .init(
            key: "startPercs",
            content: .text(text: "Начинаем без кредитов и без детей. Но на самом старте игры и в течении первого круга каждый участник может взять кредит под 10% / месяц. Со второго круга льготных условий кредитования больше нет, банковская ставка со 2го круга составляет 20%/месяц. Кредиты кратны 1000$."),
            next: .init(button:
                    .init(
                        key: "creditTable",
                        buttonName: "Как вносить кредиты в таблицу?"
                    )
            )
        ),
        .init(
            key: "creditTable",
            content: .video(
                uri: "https://github.com/flyer2001/cashflow/raw/main/OnboardingVideo/credit_table.mp4",
                captionText: "Посмотрите видео, как брать кредиты и вносить в таблицу"
            ),
            next: .init(button:
                    .init(
                        key: "gameCircle",
                        buttonName: "Далее"
                    )
            )
        ),
        .init(
            key: "gameCircle",
            content: .image(
                uri: "https://habrastorage.org/webt/e1/iw/9k/e1iw9krghj3z4y92i1v6ilko1w8.png",
                captionText: "Вся дальнейшая игра происходит в телеграм-чате, где участники могут видеть карту “Крысиных бегов” и двигать по ней, бросая кубик. \n\nХодим по часовой стрелке. Карта выглядит так: "
            ),
            next:.init(buttons: [
                .init(
                    key: "goToOpportunity",
                    buttonName: "Бросить кубик"
                )
            ])
        ),
        .init(
            key: "goToOpportunity",
            content: .image(
                uri: "https://habrastorage.org/webt/nc/o7/nq/nco7nqeyuqnsqfinuzsajyzie30.png",
                captionText: "Клетка “Возможности” - предоставляет шанс купить или продать определенный актив, это могут быть акции, облигации, недвижимость, бизнес или драг. металлы. Возможности бывают крупные от 6000$ и мелкие до 5000$, какую выбрать - решать тебе. Возможность исчезает при передаче хода следующему игроку. При попадании на данную клетку стоит решить: воспользоваться или нет  возможностью. И если да, то занести данные по сделке в таблицу. Давайте протестируем!  "
            ),
            next:.init(buttons: [
                .init(
                    key: "smallDeals",
                    buttonName: "Мелкие возможности"
                ),
                .init(
                    key: "bigDeals",
                    buttonName: "Крупные возможности"
                ),
            ])
        ),
        .init(
            key: "smallDeals",
            content: .image(
                uri: "https://habrastorage.org/webt/tj/pz/vc/tjpzvc8yluthc64hwskc4dkbugg.png",
                captionText: "Отличный выбор. Давайте посмотрим как занести данные в таблицу"
            ),
            next:.init(buttons: [
                .init(
                    key: "fillTableDeals",
                    buttonName: "Далее"
                )
            ])
        ),
        .init(
            key: "bigDeals",
            content: .image(
                uri: "https://habrastorage.org/webt/ch/eg/c6/chegc6lxxxq3vtzoogl7kwpygfq.png",
                captionText: "Отличный выбор. Давайте посмотрим как занести данные в таблицу"
            ),
            next:.init(buttons: [
                .init(
                    key: "fillTableDeals",
                    buttonName: "Далее"
                )
            ])
        ),
        .init(
            key: "fillTableDeals",
            content: .video(
                uri: "https://github.com/flyer2001/cashflow/raw/main/OnboardingVideo/deals.mp4",
                captionText: "Давайте посмотрим, как занести данные о сделке в нашу таблицу "
            ),
            next: .init(button:
                    .init(
                        key: "lux",
                        buttonName: "Бросить кубик"
                    )
            )
        ),
        .init(
            key: "lux",
            content: .image(
                uri: "https://habrastorage.org/webt/lp/tm/od/lptmodp6jkr-3cowbdcuvrtnv4s.png",
                captionText: "Клетка “Роскошь” отожествляет непредсказуемые события в нашей жизни, на которые уходят дополнительные расходы. Какие именно - вы узнаете вытянув карточку. Но такие расходы обязательно нужно погашать, если нет или не хватает денег - можно взять кредит."
            ),
            next:.init(buttons: [
                .init(
                    key: "luxCard",
                    buttonName: "Вытянуть карточку"
                )
            ])
        ),
        .init(
            key: "luxCard",
            content: .image(
                uri: "https://habrastorage.org/webt/xx/zd/vm/xxzdvmgjriyvk_bxh2vhtwbzzh0.png",
                captionText: "Давайте посмотрим, как заносить данные о пассивах в таблицу"
            ),
            next:.init(buttons: [
                .init(
                    key: "passiveTable",
                    buttonName: "Смотреть видео"
                )
            ])
        ),
        .init(
            key: "passiveTable",
            content: .video(
                uri: "https://github.com/flyer2001/cashflow/raw/main/OnboardingVideo/lux.mp4",
                captionText: "После просмотра давай бросим кубик и пойдем дальше"
            ),
            next: .init(button:
                    .init(
                        key: "charity",
                        buttonName: "Бросить кубик"
                    )
            )
        ),
        .init(
            key: "charity",
            content: .image(
                uri: "https://habrastorage.org/webt/x7/ch/dg/x7chdgasv-4jzrb8fcks4lpxrnc.png",
                captionText: "Клетка “Благотворительность” - предоставляет возможность ускориться по жизни. Как это работает: вы можете заплатить 10% от своего месячного дохода (не забыть занести расходы в табличку) и в  следующие 3 хода бросать один или 2 кубика. Но это по желанию и совершенно не обязательно к исполнению.\n\nА мы идём дальше!"
            ),
            next:.init(buttons: [
                .init(
                    key: "check",
                    buttonName: "Бросить кубик"
                )
            ])
        ),
        .init(
            key: "check",
            content: .image(
                uri: "https://habrastorage.org/webt/x7/ch/dg/x7chdgasv-4jzrb8fcks4lpxrnc.png",
                captionText: "Клетка “Расчетный чек” простыми словами означает день вашей зарплаты в игре. Важно: вы сами следите за получением дохода, пересекая поле “расчетный чек“ или вставая на него. Если в свой ход вы забыли это сделать - момент упущен и вы остаетесь без дохода.\n\nДавайте посмотрим, куда и как заносить доходы"
            ),
            next:.init(buttons: [
                .init(
                    key: "fillDebts",
                    buttonName: "Смотреть видео"
                )
            ])
        ),
        .init(
            key: "fillDebts",
            content: .video(
                uri: "https://github.com/flyer2001/cashflow/raw/main/OnboardingVideo/check.mp4",
                captionText: "Посмотрим видео, как заносить доходы и продолжим"
            ),
            next: .init(button:
                    .init(
                        key: "baby",
                        buttonName: "Бросить кубик"
                    )
            )
        ),
        .init(
            key: "baby",
            content: .image(
                uri: "https://habrastorage.org/webt/vv/59/b7/vv59b7ql2blbqvjoqaubeb88fi8.png",
                captionText: "Клетка “Ребенок”. Поздравляем вас с пополнением! \n\nПри рождении ребёнка вы получаете материнский капитал в 10000$, а также у вас появляются дополнительные расходы на ребенка.\n\nЕсли схожая карточка выпадает у других участников, вы имеете права перечислить часть средств им в подарок.\n\nДавайте посмотрим как все учесть в таблице."
            ),
            next:.init(buttons: [
                .init(
                    key: "babyFill",
                    buttonName: "Смотреть видео"
                )
            ])
        ),
        .init(
            key: "babyFill",
            content: .video(
                uri: "https://github.com/flyer2001/cashflow/raw/main/OnboardingVideo/baby.mp4",
                captionText: "Посмотрим видео, как вносить данные о ребенке и продолжим"
            ),
            next: .init(button:
                    .init(
                        key: "market",
                        buttonName: "Бросить кубик"
                    )
            )
        ),
        .init(
            key: "market",
            content: .image(
                uri: "https://habrastorage.org/webt/n9/x_/gs/n9x_gshhqafya9druxewngpn940.png",
                captionText: "Клетка “Рынок” означает события, которые могут повлиять на ваше фин. состояние. При попадании на данную клетку выпадает соответствующая карточка, в которой оглашаются новости на рынке. Исходя из ситуации, участники могут купить или продать актив, если посчитают нужным."
            ),
            next:.init(buttons: [
                .init(
                    key: "fired",
                    buttonName: "Бросить кубик"
                )
            ])
        ),
        .init(
            key: "fired",
            content: .image(
                uri: "https://habrastorage.org/webt/hu/v5/nh/huv5nhsdbh4mdb0badb2d-t2ob0.png",
                captionText: "Увы! Попав на клетку “Увольнение” вы теряете свою работу. В данном случае вам необходимо оплатить свои расходы за 2 месяца банку и пропустить 2 хода. Наш бот напомнит вам о следующем ходе. А пока не посмотрим, как внести расходы в таблицу"
            ),
            next:.init(buttons: [
                .init(
                    key: "coastsFill",
                    buttonName: "Смотреть видео"
                )
            ])
        ),
        .init(
            key: "coastsFill",
            content: .video(
                uri: "https://github.com/flyer2001/cashflow/raw/main/OnboardingVideo/check02.mp4",
                captionText: "Посмотрим видео, как внести расходы, и продолжим"
            ),
            next: .init(button:
                    .init(
                        key: "congragulations",
                        buttonName: "Далее"
                    )
            )
        ),
        .init(
            key: "congragulations",
            content: .text(text: "Поздравляем! Вы прошли первый круг. Игра длится 1-1,5 часа, за которые вам необходимо выбраться из “Крысиных бегов”. Чтобы это сделать, ваш пассивный доход должен стать расходам +1000 $. Это будет означать, что все ваши расходы на жизнь покрываются за счет пассивного дохода и даже остается излишек, который вы можете направить на бизнес и зарабатывать еще больше, ведь вы больше не обязаны работать и можете заниматься всем, чем пожелаете!"),
            next: .init(button:
                    .init(
                        key: "benefitsOfNewGame",
                        buttonName: "Далее"
                    )
            )
        ),
        .init(
            key: "benefitsOfNewGame",
            content: .text(text: "Кстати, если у вас много наличных средств, вы также можете положить часть или всю сумму на Депозит под 1%. Что также будет генерировать вам пассивных ежемесячных доход.\n\n Если хотите посмотреть, какие еще отличия от классической игры нажмите на кнопку ниже"),
            next: .init(button:
                    .init(
                        key: "rulesIntro",
                        buttonName: "Что еще нового?"
                    )
            )
        )
    ]
}
